// 
// FLCodeStorageMask.m
// 
// DO NOT MODIFY!! Modifications will be overwritten.
// Generated by: Mike Fullerton @ 6/27/13 5:17 PM with PackMule (3.0.0.31)
// 
// Project: FishLamp Code Generator
// 
// Copyright 2013 (c) GreenTongue Software LLC, Mike Fullerton
// The FishLamp Framework is released under the MIT License: http://fishlamp.com/license
// 

#import "FLCodeStorageMask.h"

NSString* FLCodeStorageMaskStringFromEnum(FLCodeStorageMask theEnum) {
    switch(theEnum) {
        case FLCodeStorageMaskIndexed:{
            return kFLCodeStorageMaskIndexed;
        }
        break;
        case FLCodeStorageMaskPrimaryKey:{
            return kFLCodeStorageMaskPrimaryKey;
        }
        break;
        case FLCodeStorageMaskStored:{
            return kFLCodeStorageMaskStored;
        }
        break;
        case FLCodeStorageMaskRequired:{
            return kFLCodeStorageMaskRequired;
        }
        break;
        case FLCodeStorageMaskNone:{
            return kFLCodeStorageMaskNone;
        }
        break;
    }
    return nil;
}

FLCodeStorageMask FLCodeStorageMaskEnumFromString(NSString* theString) {
    static NSDictionary* s_enumLookup = nil;
    static dispatch_once_t s_lookupPredicate = 0;
    dispatch_once(&s_lookupPredicate, ^{
        s_enumLookup = [[NSDictionary alloc] initWithObjectsAndKeys:
            [NSNumber numberWithInteger:FLCodeStorageMaskIndexed], [kFLCodeStorageMaskIndexed lowercaseString],
            [NSNumber numberWithInteger:FLCodeStorageMaskPrimaryKey], [kFLCodeStorageMaskPrimaryKey lowercaseString],
            [NSNumber numberWithInteger:FLCodeStorageMaskStored], [kFLCodeStorageMaskStored lowercaseString],
            [NSNumber numberWithInteger:FLCodeStorageMaskRequired], [kFLCodeStorageMaskRequired lowercaseString],
            [NSNumber numberWithInteger:FLCodeStorageMaskNone], [kFLCodeStorageMaskNone lowercaseString],
            nil ];
    });
    NSNumber* value = [s_enumLookup objectForKey:[theString lowercaseString]];
    return value == nil ? NSNotFound : [value integerValue];
}

@implementation FLCodeStorageMaskEnumSet
+ (id) enumSet{
    return FLAutorelease([[[self class] alloc] initWithValueLookup:(FLEnumSetEnumValueLookup*)  FLCodeStorageMaskEnumFromString stringLookup:(FLEnumSetEnumStringLookup*) FLCodeStorageMaskStringFromEnum]);
}
+ (id) enumSet:(NSString*) concatenatedEnumString {
    FLCodeStorageMaskEnumSet* outObject = FLAutorelease([[[self class] alloc] initWithValueLookup:(FLEnumSetEnumValueLookup*)  FLCodeStorageMaskEnumFromString stringLookup:(FLEnumSetEnumStringLookup*) FLCodeStorageMaskStringFromEnum]);
    [outObject setConcatenatedString:concatenatedEnumString];
    return outObject;
}
@end
